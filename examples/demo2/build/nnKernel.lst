ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"nnKernel.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.nnOsIdleTask,"ax",%progbits
  18              		.align	1
  19              		.weak	nnOsIdleTask
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	nnOsIdleTask:
  25              	.LFB65:
  26              		.file 1 "nnRtos/src/nnKernel.c"
   1:nnRtos/src/nnKernel.c **** #include "stm32f1xx.h"
   2:nnRtos/src/nnKernel.c **** #include "stdint.h"
   3:nnRtos/src/nnKernel.c **** #include "nnRTOS.h"
   4:nnRtos/src/nnKernel.c **** #include "port.h"
   5:nnRtos/src/nnKernel.c **** 
   6:nnRtos/src/nnKernel.c **** uint32_t MILLIS_PRESCALER;
   7:nnRtos/src/nnKernel.c **** 
   8:nnRtos/src/nnKernel.c **** struct tcb{
   9:nnRtos/src/nnKernel.c **** 	
  10:nnRtos/src/nnKernel.c ****     int32_t *stackPt;
  11:nnRtos/src/nnKernel.c **** 	struct tcb *nextPt;
  12:nnRtos/src/nnKernel.c **** 	uint32_t sleepTime;
  13:nnRtos/src/nnKernel.c **** 	uint32_t blocked;
  14:nnRtos/src/nnKernel.c **** 	uint32_t priority;
  15:nnRtos/src/nnKernel.c **** 	
  16:nnRtos/src/nnKernel.c **** };
  17:nnRtos/src/nnKernel.c **** 
  18:nnRtos/src/nnKernel.c **** typedef struct tcb tcbType;
  19:nnRtos/src/nnKernel.c **** 
  20:nnRtos/src/nnKernel.c **** tcbType tcbs[MAX_NUM_OF_THREADS+1]; //+1 -- IDLE Task
  21:nnRtos/src/nnKernel.c **** tcbType *currentPt;
  22:nnRtos/src/nnKernel.c **** uint8_t AddedTasksCounter = 0;
  23:nnRtos/src/nnKernel.c **** 
  24:nnRtos/src/nnKernel.c **** int32_t TCB_STACK[MAX_NUM_OF_THREADS+1][STACKSIZE];
  25:nnRtos/src/nnKernel.c **** 
  26:nnRtos/src/nnKernel.c **** 
  27:nnRtos/src/nnKernel.c **** 
  28:nnRtos/src/nnKernel.c **** nn_CallRes_t nnOsAddThread(void(*taskFunName)(void),uint32_t priority);
  29:nnRtos/src/nnKernel.c **** void nnOsSysTickInc(void);
  30:nnRtos/src/nnKernel.c **** 
  31:nnRtos/src/nnKernel.c **** 
  32:nnRtos/src/nnKernel.c **** 
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 2


  33:nnRtos/src/nnKernel.c **** 
  34:nnRtos/src/nnKernel.c **** 
  35:nnRtos/src/nnKernel.c **** __attribute__((weak))void nnOsIdleTask(void) /*If you want use it - please overwrite */
  36:nnRtos/src/nnKernel.c **** {
  27              		.loc 1 36 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.L2:
  37:nnRtos/src/nnKernel.c **** 	while(1)
  33              		.loc 1 37 2 discriminator 1 view .LVU1
  38:nnRtos/src/nnKernel.c **** 	{
  39:nnRtos/src/nnKernel.c **** 		//Nothing ToDo:
  40:nnRtos/src/nnKernel.c **** 		//__WFI();
  41:nnRtos/src/nnKernel.c **** 	}
  34              		.loc 1 41 2 discriminator 1 view .LVU2
  37:nnRtos/src/nnKernel.c **** 	while(1)
  35              		.loc 1 37 7 discriminator 1 view .LVU3
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE65:
  40              		.section	.text.nnOsThreadStackInit,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	nnOsThreadStackInit:
  47              	.LVL0:
  48              	.LFB66:
  42:nnRtos/src/nnKernel.c **** }
  43:nnRtos/src/nnKernel.c **** 
  44:nnRtos/src/nnKernel.c **** static void nnOsThreadStackInit(int i)
  45:nnRtos/src/nnKernel.c **** {
  49              		.loc 1 45 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              		.loc 1 45 1 is_stmt 0 view .LVU5
  55 0000 10B4     		push	{r4}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 4, -4
  46:nnRtos/src/nnKernel.c ****    tcbs[i].stackPt =  &TCB_STACK[i][STACKSIZE -16];//StackPointer
  59              		.loc 1 46 4 is_stmt 1 view .LVU6
  60              		.loc 1 46 23 is_stmt 0 view .LVU7
  61 0002 4FF4FA63 		mov	r3, #2000
  62 0006 03FB00F2 		mul	r2, r3, r0
  63 000a 02F5F261 		add	r1, r2, #1936
  64 000e 074B     		ldr	r3, .L5
  65 0010 1944     		add	r1, r1, r3
  66              		.loc 1 46 20 view .LVU8
  67 0012 00EB8000 		add	r0, r0, r0, lsl #2
  68              	.LVL1:
  69              		.loc 1 46 20 view .LVU9
  70 0016 064C     		ldr	r4, .L5+4
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 3


  71 0018 44F82010 		str	r1, [r4, r0, lsl #2]
  47:nnRtos/src/nnKernel.c **** 	 TCB_STACK[i][STACKSIZE -1] =  0x01000000; /*The T (24)bit in EPSR must be one always instruction 
  72              		.loc 1 47 3 is_stmt 1 view .LVU10
  73              		.loc 1 47 30 is_stmt 0 view .LVU11
  74 001c 1344     		add	r3, r3, r2
  75 001e 4FF08072 		mov	r2, #16777216
  76 0022 C3F8CC27 		str	r2, [r3, #1996]
  48:nnRtos/src/nnKernel.c ****   												This is reset value - 0x01000000*/ 
  49:nnRtos/src/nnKernel.c **** }
  77              		.loc 1 49 1 view .LVU12
  78 0026 10BC     		pop	{r4}
  79              	.LCFI1:
  80              		.cfi_restore 4
  81              		.cfi_def_cfa_offset 0
  82 0028 7047     		bx	lr
  83              	.L6:
  84 002a 00BF     		.align	2
  85              	.L5:
  86 002c 00000000 		.word	TCB_STACK
  87 0030 00000000 		.word	.LANCHOR0
  88              		.cfi_endproc
  89              	.LFE66:
  91              		.section	.text.nnOsSysTickInc,"ax",%progbits
  92              		.align	1
  93              		.global	nnOsSysTickInc
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  98              	nnOsSysTickInc:
  99              	.LFB71:
  50:nnRtos/src/nnKernel.c **** 
  51:nnRtos/src/nnKernel.c **** nn_CallRes_t nnOsAddThread(void(*taskFunName)(void),uint32_t priority)
  52:nnRtos/src/nnKernel.c **** {
  53:nnRtos/src/nnKernel.c ****     nn_CallRes_t retVal = Call_ok;
  54:nnRtos/src/nnKernel.c **** 
  55:nnRtos/src/nnKernel.c **** 	nnENTRY_CRITCAL();
  56:nnRtos/src/nnKernel.c ****     if(AddedTasksCounter < MAX_NUM_OF_THREADS)     // AddedTasksCounter -- static global
  57:nnRtos/src/nnKernel.c ****     {
  58:nnRtos/src/nnKernel.c ****         for(int i=0; i<AddedTasksCounter; i++)
  59:nnRtos/src/nnKernel.c ****         {
  60:nnRtos/src/nnKernel.c ****             tcbs[i].nextPt = &tcbs[i + 1];
  61:nnRtos/src/nnKernel.c ****         }
  62:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].nextPt = &tcbs[0];
  63:nnRtos/src/nnKernel.c **** 
  64:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].priority = priority;
  65:nnRtos/src/nnKernel.c ****         
  66:nnRtos/src/nnKernel.c ****         nnOsThreadStackInit(AddedTasksCounter);
  67:nnRtos/src/nnKernel.c **** 
  68:nnRtos/src/nnKernel.c ****         TCB_STACK[AddedTasksCounter][STACKSIZE-2] = (int32_t)(taskFunName); /*Init PC*/
  69:nnRtos/src/nnKernel.c **** 
  70:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].blocked  = 0;
  71:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].sleepTime = 0;
  72:nnRtos/src/nnKernel.c **** 
  73:nnRtos/src/nnKernel.c ****         AddedTasksCounter ++ ;
  74:nnRtos/src/nnKernel.c **** 
  75:nnRtos/src/nnKernel.c ****         retVal = Call_ok;
  76:nnRtos/src/nnKernel.c ****     }
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 4


  77:nnRtos/src/nnKernel.c ****     else
  78:nnRtos/src/nnKernel.c ****     {
  79:nnRtos/src/nnKernel.c ****         retVal = Call_Error; //ERROR!!!
  80:nnRtos/src/nnKernel.c ****     }
  81:nnRtos/src/nnKernel.c **** 
  82:nnRtos/src/nnKernel.c **** 	nnLEAVE_CRITCAL();
  83:nnRtos/src/nnKernel.c **** return retVal;
  84:nnRtos/src/nnKernel.c **** }
  85:nnRtos/src/nnKernel.c **** 
  86:nnRtos/src/nnKernel.c **** void nnOsKernelInit(void)
  87:nnRtos/src/nnKernel.c **** {
  88:nnRtos/src/nnKernel.c **** 	nnOsRegisterSysIncrementCb(&nnOsSysTickInc);
  89:nnRtos/src/nnKernel.c **** 	nnOsAddThread(&nnOsIdleTask,253);
  90:nnRtos/src/nnKernel.c **** 	/*After kernel start frist Called Task will be Idle - until frist switch */
  91:nnRtos/src/nnKernel.c ****     currentPt = &tcbs[0]; //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  92:nnRtos/src/nnKernel.c **** 	MILLIS_PRESCALER =  (BUS_FREQ/1000);
  93:nnRtos/src/nnKernel.c **** }
  94:nnRtos/src/nnKernel.c **** 
  95:nnRtos/src/nnKernel.c **** 
  96:nnRtos/src/nnKernel.c **** void nnOsKernelLaunch(uint32_t quanta){
  97:nnRtos/src/nnKernel.c **** 	nnOsPort_KernelLaunch(quanta,MILLIS_PRESCALER);
  98:nnRtos/src/nnKernel.c **** }
  99:nnRtos/src/nnKernel.c **** 
 100:nnRtos/src/nnKernel.c **** void nnOsThreadYield(void){
 101:nnRtos/src/nnKernel.c **** 	nnPort_ThreadYield();
 102:nnRtos/src/nnKernel.c **** }
 103:nnRtos/src/nnKernel.c **** 
 104:nnRtos/src/nnKernel.c **** void nnOsSysTickInc(void)
 105:nnRtos/src/nnKernel.c **** {
 100              		.loc 1 105 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 106:nnRtos/src/nnKernel.c **** 	nnOs_SystemTime++;
 105              		.loc 1 106 2 view .LVU14
 106              		.loc 1 106 17 is_stmt 0 view .LVU15
 107 0000 0D4A     		ldr	r2, .L12
 108 0002 1368     		ldr	r3, [r2]
 109 0004 0133     		adds	r3, r3, #1
 110 0006 1360     		str	r3, [r2]
 107:nnRtos/src/nnKernel.c **** 
 108:nnRtos/src/nnKernel.c **** 	//I'am not sure where put it
 109:nnRtos/src/nnKernel.c **** 	for(int i =0;i<=AddedTasksCounter;i++){
 111              		.loc 1 109 2 is_stmt 1 view .LVU16
 112              	.LBB11:
 113              		.loc 1 109 6 view .LVU17
 114              	.LVL2:
 115              		.loc 1 109 10 is_stmt 0 view .LVU18
 116 0008 0023     		movs	r3, #0
 117              		.loc 1 109 2 view .LVU19
 118 000a 00E0     		b	.L8
 119              	.LVL3:
 120              	.L9:
 121              		.loc 1 109 36 is_stmt 1 discriminator 2 view .LVU20
 122              		.loc 1 109 37 is_stmt 0 discriminator 2 view .LVU21
 123 000c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 5


 124              	.LVL4:
 125              	.L8:
 126              		.loc 1 109 15 is_stmt 1 discriminator 1 view .LVU22
 127              		.loc 1 109 16 is_stmt 0 discriminator 1 view .LVU23
 128 000e 0B4A     		ldr	r2, .L12+4
 129 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 130              		.loc 1 109 2 discriminator 1 view .LVU24
 131 0012 9A42     		cmp	r2, r3
 132 0014 0FDB     		blt	.L11
 110:nnRtos/src/nnKernel.c **** 		if(tcbs[i].sleepTime >0){
 133              		.loc 1 110 3 is_stmt 1 view .LVU25
 134              		.loc 1 110 13 is_stmt 0 view .LVU26
 135 0016 03EB8302 		add	r2, r3, r3, lsl #2
 136 001a 9100     		lsls	r1, r2, #2
 137 001c 084A     		ldr	r2, .L12+8
 138 001e 0A44     		add	r2, r2, r1
 139 0020 9268     		ldr	r2, [r2, #8]
 140              		.loc 1 110 5 view .LVU27
 141 0022 002A     		cmp	r2, #0
 142 0024 F2D0     		beq	.L9
 111:nnRtos/src/nnKernel.c **** 		tcbs[i].sleepTime--;
 143              		.loc 1 111 3 is_stmt 1 view .LVU28
 144              		.loc 1 111 20 is_stmt 0 view .LVU29
 145 0026 03EB8301 		add	r1, r3, r3, lsl #2
 146 002a 8800     		lsls	r0, r1, #2
 147 002c 0449     		ldr	r1, .L12+8
 148 002e 0144     		add	r1, r1, r0
 149 0030 013A     		subs	r2, r2, #1
 150 0032 8A60     		str	r2, [r1, #8]
 151 0034 EAE7     		b	.L9
 152              	.L11:
 153              	.LBE11:
 112:nnRtos/src/nnKernel.c **** 		}
 113:nnRtos/src/nnKernel.c **** 	}
 114:nnRtos/src/nnKernel.c **** }
 154              		.loc 1 114 1 view .LVU30
 155 0036 7047     		bx	lr
 156              	.L13:
 157              		.align	2
 158              	.L12:
 159 0038 00000000 		.word	nnOs_SystemTime
 160 003c 00000000 		.word	.LANCHOR1
 161 0040 00000000 		.word	.LANCHOR0
 162              		.cfi_endproc
 163              	.LFE71:
 165              		.section	.text.nnOsAddThread,"ax",%progbits
 166              		.align	1
 167              		.global	nnOsAddThread
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	nnOsAddThread:
 173              	.LVL5:
 174              	.LFB67:
  52:nnRtos/src/nnKernel.c ****     nn_CallRes_t retVal = Call_ok;
 175              		.loc 1 52 1 is_stmt 1 view -0
 176              		.cfi_startproc
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 6


 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
  52:nnRtos/src/nnKernel.c ****     nn_CallRes_t retVal = Call_ok;
 179              		.loc 1 52 1 is_stmt 0 view .LVU32
 180 0000 38B5     		push	{r3, r4, r5, lr}
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 3, -16
 184              		.cfi_offset 4, -12
 185              		.cfi_offset 5, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
  53:nnRtos/src/nnKernel.c **** 
 188              		.loc 1 53 5 is_stmt 1 view .LVU33
 189              	.LVL6:
  55:nnRtos/src/nnKernel.c ****     if(AddedTasksCounter < MAX_NUM_OF_THREADS)     // AddedTasksCounter -- static global
 190              		.loc 1 55 2 view .LVU34
 191              	.LBB12:
 192              	.LBI12:
 193              		.file 2 "Drivers/CMSIS/Core/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 7


  38:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 8


  95:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 194              		.loc 2 140 27 view .LVU35
 195              	.LBB13:
 141:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 196              		.loc 2 142 3 view .LVU36
 197              		.syntax unified
 198              	@ 142 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 199 0004 72B6     		cpsid i
 200              	@ 0 "" 2
 201              		.thumb
 202              		.syntax unified
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 9


 203              	.LBE13:
 204              	.LBE12:
  56:nnRtos/src/nnKernel.c ****     {
 205              		.loc 1 56 5 view .LVU37
  56:nnRtos/src/nnKernel.c ****     {
 206              		.loc 1 56 26 is_stmt 0 view .LVU38
 207 0006 1C4B     		ldr	r3, .L20
 208 0008 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 209              	.LVL7:
  56:nnRtos/src/nnKernel.c ****     {
 210              		.loc 1 56 7 view .LVU39
 211 000a 0428     		cmp	r0, #4
 212 000c 31D9     		bls	.L18
  79:nnRtos/src/nnKernel.c ****     }
 213              		.loc 1 79 16 view .LVU40
 214 000e 0120     		movs	r0, #1
 215              	.LVL8:
 216              	.L16:
  82:nnRtos/src/nnKernel.c **** return retVal;
 217              		.loc 1 82 2 is_stmt 1 view .LVU41
 218              	.LBB14:
 219              	.LBI14:
 129:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 220              		.loc 2 129 27 view .LVU42
 221              	.LBB15:
 131:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 222              		.loc 2 131 3 view .LVU43
 223              		.syntax unified
 224              	@ 131 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 225 0010 62B6     		cpsie i
 226              	@ 0 "" 2
 227              		.thumb
 228              		.syntax unified
 229              	.LBE15:
 230              	.LBE14:
  83:nnRtos/src/nnKernel.c **** }
 231              		.loc 1 83 1 view .LVU44
  84:nnRtos/src/nnKernel.c **** 
 232              		.loc 1 84 1 is_stmt 0 view .LVU45
 233 0012 38BD     		pop	{r3, r4, r5, pc}
 234              	.LVL9:
 235              	.L17:
 236              	.LBB16:
  60:nnRtos/src/nnKernel.c ****         }
 237              		.loc 1 60 13 is_stmt 1 discriminator 3 view .LVU46
  60:nnRtos/src/nnKernel.c ****         }
 238              		.loc 1 60 38 is_stmt 0 discriminator 3 view .LVU47
 239 0014 03F1010C 		add	ip, r3, #1
  60:nnRtos/src/nnKernel.c ****         }
 240              		.loc 1 60 30 discriminator 3 view .LVU48
 241 0018 184A     		ldr	r2, .L20+4
 242 001a 0CEB8C04 		add	r4, ip, ip, lsl #2
 243 001e 02EB8404 		add	r4, r2, r4, lsl #2
  60:nnRtos/src/nnKernel.c ****         }
 244              		.loc 1 60 28 discriminator 3 view .LVU49
 245 0022 03EB8303 		add	r3, r3, r3, lsl #2
 246              	.LVL10:
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 10


  60:nnRtos/src/nnKernel.c ****         }
 247              		.loc 1 60 28 discriminator 3 view .LVU50
 248 0026 02EB8303 		add	r3, r2, r3, lsl #2
 249 002a 5C60     		str	r4, [r3, #4]
  58:nnRtos/src/nnKernel.c ****         {
 250              		.loc 1 58 43 is_stmt 1 discriminator 3 view .LVU51
 251              	.LVL11:
  58:nnRtos/src/nnKernel.c ****         {
 252              		.loc 1 58 44 is_stmt 0 discriminator 3 view .LVU52
 253 002c 6346     		mov	r3, ip
 254              	.LVL12:
 255              	.L15:
  58:nnRtos/src/nnKernel.c ****         {
 256              		.loc 1 58 22 is_stmt 1 discriminator 1 view .LVU53
  58:nnRtos/src/nnKernel.c ****         {
 257              		.loc 1 58 9 is_stmt 0 discriminator 1 view .LVU54
 258 002e 9842     		cmp	r0, r3
 259 0030 F0DC     		bgt	.L17
 260              	.LBE16:
  62:nnRtos/src/nnKernel.c **** 
 261              		.loc 1 62 9 is_stmt 1 view .LVU55
  62:nnRtos/src/nnKernel.c **** 
 262              		.loc 1 62 40 is_stmt 0 view .LVU56
 263 0032 124C     		ldr	r4, .L20+4
 264 0034 00EB8003 		add	r3, r0, r0, lsl #2
 265              	.LVL13:
  62:nnRtos/src/nnKernel.c **** 
 266              		.loc 1 62 40 view .LVU57
 267 0038 04EB8303 		add	r3, r4, r3, lsl #2
 268 003c 5C60     		str	r4, [r3, #4]
  64:nnRtos/src/nnKernel.c ****         
 269              		.loc 1 64 9 is_stmt 1 view .LVU58
  64:nnRtos/src/nnKernel.c ****         
 270              		.loc 1 64 42 is_stmt 0 view .LVU59
 271 003e 1961     		str	r1, [r3, #16]
  66:nnRtos/src/nnKernel.c **** 
 272              		.loc 1 66 9 is_stmt 1 view .LVU60
 273 0040 FFF7FEFF 		bl	nnOsThreadStackInit
 274              	.LVL14:
  68:nnRtos/src/nnKernel.c **** 
 275              		.loc 1 68 9 view .LVU61
  68:nnRtos/src/nnKernel.c **** 
 276              		.loc 1 68 37 is_stmt 0 view .LVU62
 277 0044 0C49     		ldr	r1, .L20
 278 0046 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  68:nnRtos/src/nnKernel.c **** 
 279              		.loc 1 68 51 view .LVU63
 280 0048 0D4A     		ldr	r2, .L20+8
 281 004a 4FF4FA60 		mov	r0, #2000
 282 004e 00FB0322 		mla	r2, r0, r3, r2
 283 0052 C2F8C857 		str	r5, [r2, #1992]
  70:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].sleepTime = 0;
 284              		.loc 1 70 9 is_stmt 1 view .LVU64
  70:nnRtos/src/nnKernel.c ****         tcbs[AddedTasksCounter].sleepTime = 0;
 285              		.loc 1 70 42 is_stmt 0 view .LVU65
 286 0056 03EB8302 		add	r2, r3, r3, lsl #2
 287 005a 04EB8202 		add	r2, r4, r2, lsl #2
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 11


 288 005e 0020     		movs	r0, #0
 289 0060 D060     		str	r0, [r2, #12]
  71:nnRtos/src/nnKernel.c **** 
 290              		.loc 1 71 9 is_stmt 1 view .LVU66
  71:nnRtos/src/nnKernel.c **** 
 291              		.loc 1 71 43 is_stmt 0 view .LVU67
 292 0062 03EB8302 		add	r2, r3, r3, lsl #2
 293 0066 04EB8204 		add	r4, r4, r2, lsl #2
 294 006a A060     		str	r0, [r4, #8]
  73:nnRtos/src/nnKernel.c **** 
 295              		.loc 1 73 9 is_stmt 1 view .LVU68
  73:nnRtos/src/nnKernel.c **** 
 296              		.loc 1 73 27 is_stmt 0 view .LVU69
 297 006c 0133     		adds	r3, r3, #1
 298 006e 0B70     		strb	r3, [r1]
  75:nnRtos/src/nnKernel.c ****     }
 299              		.loc 1 75 9 is_stmt 1 view .LVU70
  75:nnRtos/src/nnKernel.c ****     }
 300              		.loc 1 75 9 is_stmt 0 view .LVU71
 301 0070 CEE7     		b	.L16
 302              	.LVL15:
 303              	.L18:
 304              	.LBB17:
  58:nnRtos/src/nnKernel.c ****         {
 305              		.loc 1 58 17 view .LVU72
 306 0072 0023     		movs	r3, #0
 307 0074 DBE7     		b	.L15
 308              	.L21:
 309 0076 00BF     		.align	2
 310              	.L20:
 311 0078 00000000 		.word	.LANCHOR1
 312 007c 00000000 		.word	.LANCHOR0
 313 0080 00000000 		.word	TCB_STACK
 314              	.LBE17:
 315              		.cfi_endproc
 316              	.LFE67:
 318              		.section	.text.nnOsKernelInit,"ax",%progbits
 319              		.align	1
 320              		.global	nnOsKernelInit
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	nnOsKernelInit:
 326              	.LFB68:
  87:nnRtos/src/nnKernel.c **** 	nnOsRegisterSysIncrementCb(&nnOsSysTickInc);
 327              		.loc 1 87 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 08B5     		push	{r3, lr}
 332              	.LCFI3:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
  88:nnRtos/src/nnKernel.c **** 	nnOsAddThread(&nnOsIdleTask,253);
 336              		.loc 1 88 2 view .LVU74
 337 0002 0748     		ldr	r0, .L24
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 12


 338 0004 FFF7FEFF 		bl	nnOsRegisterSysIncrementCb
 339              	.LVL16:
  89:nnRtos/src/nnKernel.c **** 	/*After kernel start frist Called Task will be Idle - until frist switch */
 340              		.loc 1 89 2 view .LVU75
 341 0008 FD21     		movs	r1, #253
 342 000a 0648     		ldr	r0, .L24+4
 343 000c FFF7FEFF 		bl	nnOsAddThread
 344              	.LVL17:
  91:nnRtos/src/nnKernel.c **** 	MILLIS_PRESCALER =  (BUS_FREQ/1000);
 345              		.loc 1 91 5 view .LVU76
  91:nnRtos/src/nnKernel.c **** 	MILLIS_PRESCALER =  (BUS_FREQ/1000);
 346              		.loc 1 91 15 is_stmt 0 view .LVU77
 347 0010 054B     		ldr	r3, .L24+8
 348 0012 064A     		ldr	r2, .L24+12
 349 0014 1A60     		str	r2, [r3]
  92:nnRtos/src/nnKernel.c **** }
 350              		.loc 1 92 2 is_stmt 1 view .LVU78
  92:nnRtos/src/nnKernel.c **** }
 351              		.loc 1 92 19 is_stmt 0 view .LVU79
 352 0016 064B     		ldr	r3, .L24+16
 353 0018 4FF47A42 		mov	r2, #64000
 354 001c 1A60     		str	r2, [r3]
  93:nnRtos/src/nnKernel.c **** 
 355              		.loc 1 93 1 view .LVU80
 356 001e 08BD     		pop	{r3, pc}
 357              	.L25:
 358              		.align	2
 359              	.L24:
 360 0020 00000000 		.word	nnOsSysTickInc
 361 0024 00000000 		.word	nnOsIdleTask
 362 0028 00000000 		.word	.LANCHOR2
 363 002c 00000000 		.word	.LANCHOR0
 364 0030 00000000 		.word	.LANCHOR3
 365              		.cfi_endproc
 366              	.LFE68:
 368              		.section	.text.nnOsKernelLaunch,"ax",%progbits
 369              		.align	1
 370              		.global	nnOsKernelLaunch
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	nnOsKernelLaunch:
 376              	.LVL18:
 377              	.LFB69:
  96:nnRtos/src/nnKernel.c **** 	nnOsPort_KernelLaunch(quanta,MILLIS_PRESCALER);
 378              		.loc 1 96 39 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
  96:nnRtos/src/nnKernel.c **** 	nnOsPort_KernelLaunch(quanta,MILLIS_PRESCALER);
 382              		.loc 1 96 39 is_stmt 0 view .LVU82
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI4:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
  97:nnRtos/src/nnKernel.c **** }
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 13


 388              		.loc 1 97 2 is_stmt 1 view .LVU83
 389 0002 024B     		ldr	r3, .L28
 390 0004 1968     		ldr	r1, [r3]
 391 0006 FFF7FEFF 		bl	nnOsPort_KernelLaunch
 392              	.LVL19:
  98:nnRtos/src/nnKernel.c **** 
 393              		.loc 1 98 1 is_stmt 0 view .LVU84
 394 000a 08BD     		pop	{r3, pc}
 395              	.L29:
 396              		.align	2
 397              	.L28:
 398 000c 00000000 		.word	.LANCHOR3
 399              		.cfi_endproc
 400              	.LFE69:
 402              		.section	.text.nnOsThreadYield,"ax",%progbits
 403              		.align	1
 404              		.global	nnOsThreadYield
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	nnOsThreadYield:
 410              	.LFB70:
 100:nnRtos/src/nnKernel.c **** 	nnPort_ThreadYield();
 411              		.loc 1 100 27 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI5:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
 101:nnRtos/src/nnKernel.c **** }
 420              		.loc 1 101 2 view .LVU86
 421 0002 FFF7FEFF 		bl	nnPort_ThreadYield
 422              	.LVL20:
 102:nnRtos/src/nnKernel.c **** 
 423              		.loc 1 102 1 is_stmt 0 view .LVU87
 424 0006 08BD     		pop	{r3, pc}
 425              		.cfi_endproc
 426              	.LFE70:
 428              		.section	.text.nnOs_GetSystemTime,"ax",%progbits
 429              		.align	1
 430              		.global	nnOs_GetSystemTime
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	nnOs_GetSystemTime:
 436              	.LFB72:
 115:nnRtos/src/nnKernel.c **** 
 116:nnRtos/src/nnKernel.c **** uint32_t nnOs_GetSystemTime(void)
 117:nnRtos/src/nnKernel.c **** {
 437              		.loc 1 117 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 14


 118:nnRtos/src/nnKernel.c **** 	return nnOs_SystemTime;
 442              		.loc 1 118 2 view .LVU89
 119:nnRtos/src/nnKernel.c **** }
 443              		.loc 1 119 1 is_stmt 0 view .LVU90
 444 0000 014B     		ldr	r3, .L33
 445 0002 1868     		ldr	r0, [r3]
 446 0004 7047     		bx	lr
 447              	.L34:
 448 0006 00BF     		.align	2
 449              	.L33:
 450 0008 00000000 		.word	nnOs_SystemTime
 451              		.cfi_endproc
 452              	.LFE72:
 454              		.section	.text.nnOsPriorityScheduler,"ax",%progbits
 455              		.align	1
 456              		.global	nnOsPriorityScheduler
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	nnOsPriorityScheduler:
 462              	.LFB73:
 120:nnRtos/src/nnKernel.c **** 
 121:nnRtos/src/nnKernel.c **** //Function called from Port Interrupt - for example from PendSVIrq or SysTick
 122:nnRtos/src/nnKernel.c **** void nnOsPriorityScheduler(void) //0 - most important task(highest priority ) -> 255 lowest priorit
 123:nnRtos/src/nnKernel.c **** {
 463              		.loc 1 123 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0000 30B4     		push	{r4, r5}
 469              	.LCFI6:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 5, -4
 124:nnRtos/src/nnKernel.c **** 	tcbType *_currentPt = currentPt;
 473              		.loc 1 124 2 view .LVU92
 474              		.loc 1 124 11 is_stmt 0 view .LVU93
 475 0002 0C4B     		ldr	r3, .L40
 476 0004 1968     		ldr	r1, [r3]
 477              	.LVL21:
 125:nnRtos/src/nnKernel.c **** 	tcbType *nextThreadToRun = _currentPt;
 478              		.loc 1 125 2 is_stmt 1 view .LVU94
 126:nnRtos/src/nnKernel.c **** 	uint8_t highestPriorityFound = 255;
 479              		.loc 1 126 2 view .LVU95
 125:nnRtos/src/nnKernel.c **** 	tcbType *nextThreadToRun = _currentPt;
 480              		.loc 1 125 11 is_stmt 0 view .LVU96
 481 0006 0C46     		mov	r4, r1
 124:nnRtos/src/nnKernel.c **** 	tcbType *_currentPt = currentPt;
 482              		.loc 1 124 11 view .LVU97
 483 0008 0B46     		mov	r3, r1
 484              		.loc 1 126 10 view .LVU98
 485 000a FF20     		movs	r0, #255
 486 000c 01E0     		b	.L37
 487              	.LVL22:
 488              	.L36:
 127:nnRtos/src/nnKernel.c **** 	
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 15


 128:nnRtos/src/nnKernel.c **** 	do{
 129:nnRtos/src/nnKernel.c **** 		_currentPt =_currentPt->nextPt;
 130:nnRtos/src/nnKernel.c **** 		if((_currentPt->priority < highestPriorityFound)&&
 131:nnRtos/src/nnKernel.c **** 				(_currentPt->blocked ==0)&&
 132:nnRtos/src/nnKernel.c **** 			(_currentPt->sleepTime ==0)){
 133:nnRtos/src/nnKernel.c **** 				
 134:nnRtos/src/nnKernel.c **** 				nextThreadToRun =_currentPt;
 135:nnRtos/src/nnKernel.c **** 				highestPriorityFound = _currentPt->priority; 
 136:nnRtos/src/nnKernel.c **** 				}
 137:nnRtos/src/nnKernel.c **** 	}while(_currentPt != currentPt);
 489              		.loc 1 137 8 is_stmt 1 view .LVU99
 490              		.loc 1 137 2 is_stmt 0 view .LVU100
 491 000e 9942     		cmp	r1, r3
 492 0010 0CD0     		beq	.L39
 493              	.LVL23:
 494              	.L37:
 128:nnRtos/src/nnKernel.c **** 		_currentPt =_currentPt->nextPt;
 495              		.loc 1 128 2 is_stmt 1 view .LVU101
 129:nnRtos/src/nnKernel.c **** 		if((_currentPt->priority < highestPriorityFound)&&
 496              		.loc 1 129 3 view .LVU102
 129:nnRtos/src/nnKernel.c **** 		if((_currentPt->priority < highestPriorityFound)&&
 497              		.loc 1 129 14 is_stmt 0 view .LVU103
 498 0012 5B68     		ldr	r3, [r3, #4]
 499              	.LVL24:
 130:nnRtos/src/nnKernel.c **** 				(_currentPt->blocked ==0)&&
 500              		.loc 1 130 3 is_stmt 1 view .LVU104
 130:nnRtos/src/nnKernel.c **** 				(_currentPt->blocked ==0)&&
 501              		.loc 1 130 17 is_stmt 0 view .LVU105
 502 0014 1A69     		ldr	r2, [r3, #16]
 130:nnRtos/src/nnKernel.c **** 				(_currentPt->blocked ==0)&&
 503              		.loc 1 130 5 view .LVU106
 504 0016 8242     		cmp	r2, r0
 505 0018 F9D2     		bcs	.L36
 130:nnRtos/src/nnKernel.c **** 				(_currentPt->blocked ==0)&&
 506              		.loc 1 130 51 discriminator 1 view .LVU107
 507 001a DD68     		ldr	r5, [r3, #12]
 508 001c 002D     		cmp	r5, #0
 509 001e F6D1     		bne	.L36
 131:nnRtos/src/nnKernel.c **** 			(_currentPt->sleepTime ==0)){
 510              		.loc 1 131 30 view .LVU108
 511 0020 9D68     		ldr	r5, [r3, #8]
 512 0022 002D     		cmp	r5, #0
 513 0024 F3D1     		bne	.L36
 134:nnRtos/src/nnKernel.c **** 				highestPriorityFound = _currentPt->priority; 
 514              		.loc 1 134 5 is_stmt 1 view .LVU109
 515              	.LVL25:
 135:nnRtos/src/nnKernel.c **** 				}
 516              		.loc 1 135 5 view .LVU110
 135:nnRtos/src/nnKernel.c **** 				}
 517              		.loc 1 135 26 is_stmt 0 view .LVU111
 518 0026 D0B2     		uxtb	r0, r2
 519              	.LVL26:
 134:nnRtos/src/nnKernel.c **** 				highestPriorityFound = _currentPt->priority; 
 520              		.loc 1 134 21 view .LVU112
 521 0028 1C46     		mov	r4, r3
 522 002a F0E7     		b	.L36
 523              	.LVL27:
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 16


 524              	.L39:
 138:nnRtos/src/nnKernel.c ****  
 139:nnRtos/src/nnKernel.c **** 	currentPt  =  nextThreadToRun;
 525              		.loc 1 139 2 is_stmt 1 view .LVU113
 526              		.loc 1 139 13 is_stmt 0 view .LVU114
 527 002c 014B     		ldr	r3, .L40
 528              	.LVL28:
 529              		.loc 1 139 13 view .LVU115
 530 002e 1C60     		str	r4, [r3]
 140:nnRtos/src/nnKernel.c **** }
 531              		.loc 1 140 1 view .LVU116
 532 0030 30BC     		pop	{r4, r5}
 533              	.LCFI7:
 534              		.cfi_restore 5
 535              		.cfi_restore 4
 536              		.cfi_def_cfa_offset 0
 537              	.LVL29:
 538              		.loc 1 140 1 view .LVU117
 539 0032 7047     		bx	lr
 540              	.L41:
 541              		.align	2
 542              	.L40:
 543 0034 00000000 		.word	.LANCHOR2
 544              		.cfi_endproc
 545              	.LFE73:
 547              		.section	.text.nnOsThreadSleep,"ax",%progbits
 548              		.align	1
 549              		.global	nnOsThreadSleep
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 554              	nnOsThreadSleep:
 555              	.LVL30:
 556              	.LFB74:
 141:nnRtos/src/nnKernel.c **** 
 142:nnRtos/src/nnKernel.c **** void nnOsThreadSleep(uint32_t sleep_time){
 557              		.loc 1 142 42 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		.loc 1 142 42 is_stmt 0 view .LVU119
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI8:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 143:nnRtos/src/nnKernel.c **** 	nnENTRY_CRITCAL();
 567              		.loc 1 143 2 is_stmt 1 view .LVU120
 568              	.LBB18:
 569              	.LBI18:
 140:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 570              		.loc 2 140 27 view .LVU121
 571              	.LBB19:
 572              		.loc 2 142 3 view .LVU122
 573              		.syntax unified
 574              	@ 142 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 575 0002 72B6     		cpsid i
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 17


 576              	@ 0 "" 2
 577              		.thumb
 578              		.syntax unified
 579              	.LBE19:
 580              	.LBE18:
 144:nnRtos/src/nnKernel.c **** 	currentPt->sleepTime =  sleep_time;
 581              		.loc 1 144 2 view .LVU123
 582              		.loc 1 144 11 is_stmt 0 view .LVU124
 583 0004 034B     		ldr	r3, .L44
 584 0006 1B68     		ldr	r3, [r3]
 585              		.loc 1 144 23 view .LVU125
 586 0008 9860     		str	r0, [r3, #8]
 145:nnRtos/src/nnKernel.c **** 	nnOsThreadYield();
 587              		.loc 1 145 2 is_stmt 1 view .LVU126
 588 000a FFF7FEFF 		bl	nnOsThreadYield
 589              	.LVL31:
 146:nnRtos/src/nnKernel.c **** 	nnLEAVE_CRITCAL();
 590              		.loc 1 146 2 view .LVU127
 591              	.LBB20:
 592              	.LBI20:
 129:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 593              		.loc 2 129 27 view .LVU128
 594              	.LBB21:
 131:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 595              		.loc 2 131 3 view .LVU129
 596              		.syntax unified
 597              	@ 131 "Drivers/CMSIS/Core/Include/cmsis_gcc.h" 1
 598 000e 62B6     		cpsie i
 599              	@ 0 "" 2
 600              		.thumb
 601              		.syntax unified
 602              	.LBE21:
 603              	.LBE20:
 147:nnRtos/src/nnKernel.c **** }
 604              		.loc 1 147 1 is_stmt 0 view .LVU130
 605 0010 08BD     		pop	{r3, pc}
 606              	.L45:
 607 0012 00BF     		.align	2
 608              	.L44:
 609 0014 00000000 		.word	.LANCHOR2
 610              		.cfi_endproc
 611              	.LFE74:
 613              		.global	TCB_STACK
 614              		.global	AddedTasksCounter
 615              		.global	currentPt
 616              		.global	tcbs
 617              		.global	MILLIS_PRESCALER
 618              		.section	.bss.AddedTasksCounter,"aw",%nobits
 619              		.set	.LANCHOR1,. + 0
 622              	AddedTasksCounter:
 623 0000 00       		.space	1
 624              		.section	.bss.MILLIS_PRESCALER,"aw",%nobits
 625              		.align	2
 626              		.set	.LANCHOR3,. + 0
 629              	MILLIS_PRESCALER:
 630 0000 00000000 		.space	4
 631              		.section	.bss.TCB_STACK,"aw",%nobits
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 18


 632              		.align	2
 635              	TCB_STACK:
 636 0000 00000000 		.space	12000
 636      00000000 
 636      00000000 
 636      00000000 
 636      00000000 
 637              		.section	.bss.currentPt,"aw",%nobits
 638              		.align	2
 639              		.set	.LANCHOR2,. + 0
 642              	currentPt:
 643 0000 00000000 		.space	4
 644              		.section	.bss.tcbs,"aw",%nobits
 645              		.align	2
 646              		.set	.LANCHOR0,. + 0
 649              	tcbs:
 650 0000 00000000 		.space	120
 650      00000000 
 650      00000000 
 650      00000000 
 650      00000000 
 651              		.text
 652              	.Letext0:
 653              		.file 3 "d:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_
 654              		.file 4 "d:\\gnu_tools\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdi
 655              		.file 5 "nnRtos/inc/nn_rtosTypes.h"
 656              		.file 6 "nnRtos/port/CM3F/port.h"
ARM GAS  C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 nnKernel.c
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:18     .text.nnOsIdleTask:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:24     .text.nnOsIdleTask:00000000 nnOsIdleTask
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:41     .text.nnOsThreadStackInit:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:46     .text.nnOsThreadStackInit:00000000 nnOsThreadStackInit
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:86     .text.nnOsThreadStackInit:0000002c $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:635    .bss.TCB_STACK:00000000 TCB_STACK
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:92     .text.nnOsSysTickInc:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:98     .text.nnOsSysTickInc:00000000 nnOsSysTickInc
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:159    .text.nnOsSysTickInc:00000038 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:166    .text.nnOsAddThread:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:172    .text.nnOsAddThread:00000000 nnOsAddThread
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:311    .text.nnOsAddThread:00000078 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:319    .text.nnOsKernelInit:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:325    .text.nnOsKernelInit:00000000 nnOsKernelInit
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:360    .text.nnOsKernelInit:00000020 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:369    .text.nnOsKernelLaunch:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:375    .text.nnOsKernelLaunch:00000000 nnOsKernelLaunch
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:398    .text.nnOsKernelLaunch:0000000c $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:403    .text.nnOsThreadYield:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:409    .text.nnOsThreadYield:00000000 nnOsThreadYield
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:429    .text.nnOs_GetSystemTime:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:435    .text.nnOs_GetSystemTime:00000000 nnOs_GetSystemTime
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:450    .text.nnOs_GetSystemTime:00000008 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:455    .text.nnOsPriorityScheduler:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:461    .text.nnOsPriorityScheduler:00000000 nnOsPriorityScheduler
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:543    .text.nnOsPriorityScheduler:00000034 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:548    .text.nnOsThreadSleep:00000000 $t
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:554    .text.nnOsThreadSleep:00000000 nnOsThreadSleep
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:609    .text.nnOsThreadSleep:00000014 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:622    .bss.AddedTasksCounter:00000000 AddedTasksCounter
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:642    .bss.currentPt:00000000 currentPt
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:649    .bss.tcbs:00000000 tcbs
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:629    .bss.MILLIS_PRESCALER:00000000 MILLIS_PRESCALER
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:623    .bss.AddedTasksCounter:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:625    .bss.MILLIS_PRESCALER:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:632    .bss.TCB_STACK:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:638    .bss.currentPt:00000000 $d
C:\Users\Teodor\AppData\Local\Temp\ccsGnPJ6.s:645    .bss.tcbs:00000000 $d

UNDEFINED SYMBOLS
nnOs_SystemTime
nnOsRegisterSysIncrementCb
nnOsPort_KernelLaunch
nnPort_ThreadYield
